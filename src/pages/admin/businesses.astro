---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { supabase, type Business } from '../../lib/supabase';

// Get query parameters
const status = Astro.url.searchParams.get('status') || 'all';
const page = parseInt(Astro.url.searchParams.get('page') || '1');
const limit = 20;

// Build query
let query = supabase
  .from('businesses')
  .select('*, users(email)', { count: 'exact' });

if (status !== 'all') {
  query = query.eq('status', status);
}

const { data: businesses, count } = await query
  .order('created_at', { ascending: false })
  .range((page - 1) * limit, page * limit - 1);

const totalPages = Math.ceil((count || 0) / limit);
---

<AdminLayout title="Manage Businesses">
  <div class="bg-white rounded-lg shadow-sm">
    <div class="p-6 border-b">
      <div class="flex justify-between items-center">
        <h2 class="text-xl font-semibold">Manage Businesses</h2>
        <div class="flex gap-2">
          <a 
            href="/admin/businesses?status=all" 
            class={`px-4 py-2 rounded-md ${status === 'all' ? 'bg-gray-100' : 'hover:bg-gray-50'}`}
          >
            All
          </a>
          <a 
            href="/admin/businesses?status=pending" 
            class={`px-4 py-2 rounded-md ${status === 'pending' ? 'bg-gray-100' : 'hover:bg-gray-50'}`}
          >
            Pending
          </a>
          <a 
            href="/admin/businesses?status=approved" 
            class={`px-4 py-2 rounded-md ${status === 'approved' ? 'bg-gray-100' : 'hover:bg-gray-50'}`}
          >
            Approved
          </a>
          <a 
            href="/admin/businesses?status=rejected" 
            class={`px-4 py-2 rounded-md ${status === 'rejected' ? 'bg-gray-100' : 'hover:bg-gray-50'}`}
          >
            Rejected
          </a>
        </div>
      </div>
    </div>

    <div class="divide-y">
      {businesses?.map((business) => (
        <div class="p-6 hover:bg-gray-50">
          <div class="flex justify-between items-start">
            <div>
              <h3 class="font-medium text-lg">{business.name}</h3>
              <p class="text-sm text-gray-500">Submitted by: {business.users?.email}</p>
              <p class="text-sm text-gray-500">Category: {business.category}</p>
              <p class="mt-2 text-gray-600">{business.description}</p>
              <div class="mt-2 text-sm text-gray-500">
                <p>Address: {business.address}</p>
                {business.website && <p>Website: {business.website}</p>}
                {business.phone && <p>Phone: {business.phone}</p>}
              </div>
            </div>
            {status === 'pending' && (
              <div class="flex gap-2">
                <button
                  data-business-id={business.id}
                  data-action="approve"
                  class="approve-btn px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors"
                >
                  Approve
                </button>
                <button
                  data-business-id={business.id}
                  data-action="reject"
                  class="reject-btn px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors"
                >
                  Reject
                </button>
              </div>
            )}
          </div>
        </div>
      ))}
      
      {(!businesses || businesses.length === 0) && (
        <div class="p-6 text-center text-gray-500">
          No businesses found for the selected status.
        </div>
      )}
    </div>

    {totalPages > 1 && (
      <div class="p-4 border-t flex justify-center gap-2">
        {Array.from({ length: totalPages }, (_, i) => (
          <a
            href={`/admin/businesses?status=${status}&page=${i + 1}`}
            class={`px-4 py-2 rounded-md ${page === i + 1 ? 'bg-blue-600 text-white' : 'hover:bg-gray-50'}`}
          >
            {i + 1}
          </a>
        ))}
      </div>
    )}
  </div>
</AdminLayout>

<script>
  import { supabase } from '../../lib/supabase';

  document.addEventListener('click', async (e) => {
    const target = e.target as HTMLElement;
    if (!target.matches('.approve-btn, .reject-btn')) return;

    const businessId = target.dataset.businessId;
    const action = target.dataset.action;
    if (!businessId || !action) return;

    try {
      target.disabled = true;
      target.textContent = action === 'approve' ? 'Approving...' : 'Rejecting...';

      const { error } = await supabase
        .from('businesses')
        .update({ 
          status: action === 'approve' ? 'approved' : 'rejected',
          reviewed_at: new Date().toISOString()
        })
        .eq('id', businessId);

      if (error) throw error;

      // Remove the business card from the UI
      const card = target.closest('.p-6');
      card?.remove();

      // Show empty state if no more businesses
      const businessCards = document.querySelectorAll('.p-6');
      if (businessCards.length === 0) {
        const listContainer = document.querySelector('.divide-y');
        if (listContainer) {
          listContainer.innerHTML = `
            <div class="p-6 text-center text-gray-500">
              No businesses found for the selected status.
            </div>
          `;
        }
      }
    } catch (error) {
      console.error('Error:', error);
      alert('An error occurred. Please try again.');
    } finally {
      target.disabled = false;
      target.textContent = action === 'approve' ? 'Approve' : 'Reject';
    }
  });
</script> 